{
    "title": "Day 5 — Deployment & Reflection (Week 1 Finale)",
    "pages": [
      {
        "title": "Page 1: Understanding Deployment in the SDLC",
        "type": "theory",
        "duration": "20 min",
        "content": "<h2>Mentor Introduction</h2><p>Say with energy: “You’ve built something real — now let’s take it live! Today, you’ll learn how to ship like a pro.”</p><h3>Objective</h3><ul><li>Understand what deployment means in a real-world SDLC</li><li>Learn how frontend and backend hosting differ</li><li>See how AI can guide troubleshooting</li></ul><h3>Mentor Explanation</h3><p>Explain: “Deployment is how we turn code into a product users can access.” Draw the flow on board:</p><pre>Local → GitHub → Build → Host → Live URL</pre><p>Show how Vercel automates builds, and Render/Railway host APIs or databases.</p><h3>Mentor Demo (10 min)</h3><ol><li>Open Vercel.com and show dashboard.</li><li>Click <strong>New Project → Import GitHub Repo</strong>.</li><li>Explain what Vercel does behind the scenes (pulls code → build → serve).</li></ol><h3>Class Discussion</h3><p>Ask: “Why is ‘Deploy early, deploy often’ a good habit?” → emphasize feedback loops and confidence.</p><h3>Deliverable</h3><p>✅ Students draw deployment flow in their notebooks or Miro boards.</p>"
      },
      {
        "title": "Page 2: Environment Variables & Secrets",
        "type": "theory",
        "duration": "20 min",
        "content": "<h2>Mentor Setup</h2><p>Say: “Some data should never be shared — like your API keys. That’s where environment variables come in.”</p><h3>Goal</h3><ul><li>Understand what .env files do</li><li>Learn safe handling of API keys and tokens</li></ul><h3>Mentor Demo (10 min)</h3><p>In Cursor, create a file:</p><pre>.env.local<br>OPENAI_API_KEY=sk-examplekeyhere<br>DATABASE_URL=postgres://example</pre><p>Then in code:</p><div class='code-block'><code>const apiKey = process.env.OPENAI_API_KEY;<br>console.log('Using key:', apiKey ? 'Loaded ✅' : 'Missing ❌');</code></div><h3>Important Note</h3><ul><li>Never commit <code>.env</code> files to GitHub – add to <code>.gitignore</code>.</li><li>In Vercel: Project → Settings → Environment Variables → add key/value.</li></ul><h3>Student Exercise (10 min)</h3><ol><li>Create .env.local with one fake key.</li><li>Add it to .gitignore.</li><li>Push repo and verify file is excluded on GitHub.</li></ol><h3>Mentor Tip</h3><p>Show what happens if you expose keys (public API ban example) → it sticks with students.</p><h3>Deliverable</h3><p>✅ .env set up locally and securely ignored in repo.</p>"
      },
      {
        "title": "Page 3: Hosting Options Simplified (Frontend vs Backend)",
        "type": "theory",
        "duration": "20 min",
        "content": "<h2>Mentor Introduction</h2><p>Say: “There are many ways to host — but let’s focus on the simplest and most reliable for students.”</p><h3>Objective</h3><ul><li>Differentiate between frontend and backend hosting</li><li>Pick a platform for each</li><li>Use AI to decide which fits your project</li></ul><h3>Quick Comparison Table</h3><table><tr><th>Type</th><th>Platform</th><th>Best For</th></tr><tr><td>Frontend</td><td>Vercel</td><td>Next.js, React, Tailwind apps</td></tr><tr><td>Backend</td><td>Render</td><td>Node.js or Express APIs</td></tr><tr><td>Backend</td><td>Railway</td><td>Python, Postgres, API testing</td></tr></table><h3>Mentor Demo (10 min)</h3><p>Prompt ChatGPT:</p><div class='code-block'><code>I built a Next.js app with a mock API. Should I deploy both to Vercel or split frontend and backend between Vercel and Render?</code></div><p>Show how AI recommends split deployments for scalability and ease of debugging.</p><h3>Discussion</h3><p>Ask: “What’s the risk of hosting everything in one place?” → guide them toward understanding separation of concerns.</p><h3>Deliverable</h3><p>✅ Students choose their hosting stack (Vercel + Render or Vercel only) and note it in their README.</p>"
      },
      {
        "title": "Page 4: Deploying the Frontend on Vercel",
        "type": "practical",
        "duration": "40 min",
        "content": "<h2>Mentor Introduction</h2><p>Say: “You’ve seen Vercel before — now let’s use it to launch your app for real. By the end of this session, everyone will have a live link!”</p><h3>Objective</h3><ul><li>Deploy project from GitHub to Vercel</li><li>Verify live build and troubleshoot errors</li></ul><h3>Mentor Demo (10 min)</h3><ol><li>Go to <a href='https://vercel.com'>Vercel.com</a> → Login with GitHub.</li><li>Click <strong>New Project → Import Repo</strong>.</li><li>Pick student repo (e.g., <code>ai-notes-app</code>).</li><li>Set framework: Next.js → <strong>Deploy</strong>.</li><li>Wait 1–2 minutes → show live link: <code>https://ai-notes.vercel.app</code>.</li></ol><h3>Mentor Tip</h3><p>Encourage: “Don’t panic if you see red! Red means learning.”</p><h3>Common Issues</h3><ul><li><strong>Build Failed:</strong> Missing dependency → fix <code>package.json</code> and redeploy.</li><li><strong>404:</strong> Wrong <code>export default</code> or routing setup.</li><li><strong>Blank Page:</strong> JavaScript error → check console logs.</li></ul><h3>Student Hands-On (25 min)</h3><ol><li>Deploy own app on Vercel via GitHub import.</li><li>Verify live build (check mobile + desktop).</li><li>Copy the public link and paste into <code>README.md</code> under “Live Preview”.</li></ol><h3>Mentor Reflection</h3><p>Ask: “What felt most satisfying about seeing your live link?” — let a few students share their moment of joy.</p><h3>Deliverable</h3><p>✅ Live app on Vercel<br>✅ Updated README.md with live link<br>✅ Commit: <code>docs: add vercel link</code></p>"
      },
      {
        "title": "Page 5: Deploying Backend or Mock API on Render/Railway (Optional)",
        "type": "practical",
        "duration": "40 min",
        "content": "<h2>Mentor Opening</h2><p>Say: “Some of you used mock APIs — let’s deploy them too, so your data works everywhere.”</p><h3>Objective</h3><ul><li>Deploy backend or mock JSON server online</li><li>Learn Render & Railway basics</li><li>Connect live backend with frontend</li></ul><h3>Mentor Demo (10 min)</h3><p>Option 1 — <strong>Render</strong></p><ol><li>Go to <a href='https://render.com'>render.com</a> → Login with GitHub.</li><li><strong>New + Web Service → Select your repo</strong>.</li><li>Set Build Command: <code>npm install && npm start</code>.</li><li>Deploy → wait → copy live URL (e.g., <code>https://ai-api.onrender.com</code>).</li></ol><p>Option 2 — <strong>Railway</strong></p><ol><li>Go to <a href='https://railway.app'>railway.app</a> → Login with GitHub.</li><li>Click <strong>New Project → Deploy from GitHub</strong>.</li><li>Once live, open API link and test endpoints.</li></ol><h3>Student Hands-On (25 min)</h3><ol><li>Students with backends: deploy using Render/Railway.</li><li>Frontend-only students: skip but help a peer.</li><li>Update frontend code to fetch from new API URL.</li></ol><h3>Mentor Tip</h3><p>Explain: “Every professional engineer deploys small parts independently — front, back, and docs are all separate builds.”</p><h3>Deliverable</h3><p>✅ Backend/API live URL<br>✅ Frontend connected to live data<br>✅ Commit: <code>chore: connect live API endpoint</code></p>"
      },
      {
        "title": "Page 6: Debugging & Testing Live Builds",
        "type": "practical",
        "duration": "40 min",
        "content": "<h2>Mentor Setup</h2><p>Say: “We’re live! Now it’s time to act like QA engineers — test, break, fix, repeat.”</p><h3>Objective</h3><ul><li>Test live app on multiple devices</li><li>Debug common build issues using AI</li><li>Document and fix deployment bugs</li></ul><h3>Mentor Demo (10 min)</h3><p>Open live site and intentionally cause an error (e.g., wrong API URL). Show how to use ChatGPT for help:</p><div class='code-block'><code>My Vercel deployment shows a blank screen. Console log: 'Cannot read properties of undefined (reading map)'.<br>What’s the cause and how to fix it?</code></div><p>Show how AI breaks down the issue: root cause → solution → test step.</p><h3>Student Activity (25 min)</h3><ol><li>Visit their own deployed app link.</li><li>Test on mobile, tablet, and desktop.</li><li>Write one bug report in <code>ISSUES.md</code> (new file in repo).</li><li>Use ChatGPT/Claude to find fixes.</li><li>Deploy updated version to confirm fix.</li></ol><h3>Mentor Tip</h3><p>Encourage honesty — “Finding bugs means you’re improving.”<br>Have 2–3 students share a funny or interesting bug they encountered.</p><h3>Deliverable</h3><p>✅ Tested and debugged live build<br>✅ 1 Issue logged and fixed<br>✅ Commit: <code>fix: resolved deployment bugs</code></p>"
      },
      {
        "title": "Page 7: Document Your Project Like a Pro",
        "type": "practical",
        "duration": "40 min",
        "content": "<h2>Mentor Introduction</h2><p>Say: “Great work getting your app live! Now let’s make it look professional — your README is your resume.”</p><h3>Objective</h3><ul><li>Write a clear and visual README.md</li><li>Add screenshots and deployment links</li><li>Make your project portfolio-ready</li></ul><h3>Mentor Demo (10 min)</h3><p>Show an example README:</p><div class='code-block'><code># 🤖 Quote Generator<br><br>My second AI Engineering project built with Next.js + Tailwind CSS. Generates random quotes using AI and animations.<br><br>## 🚀 Live Link<br>https://quote-ai.vercel.app<br><br>## 🧠 What I Learned<br>- How to deploy on Vercel<br>- How to use .env safely<br>- How to debug with AI copilots<br><br>## 🖼 Screenshot<br>![Preview](public/screenshots/quote.png)<br><br>## 🛠 Stack<br>- Next.js 14<br>- TypeScript<br>- Tailwind CSS<br>- Vercel<br><br>## 🤝 Built With AI<br>- Code: Cursor<br>- Design: V0<br>- Debug: Claude<br>- Planning: ChatGPT</code></div><h3>Student Exercise (25 min)</h3><ol><li>Open <code>README.md</code> in Cursor.</li><li>Add project title, live link, screenshots, and learnings.</li><li>Commit changes with message:<br><code>docs: update README with screenshots</code></li></ol><h3>Mentor Tip</h3><p>Encourage: “You’re not just building projects — you’re building proof of learning.”</p><h3>Deliverable</h3><p>✅ README.md updated with visuals<br>✅ Screenshot added<br>✅ Commit pushed to GitHub</p>"
      },
      {
        "title": "Page 8: Public Launch — Your LinkedIn Post",
        "type": "practical",
        "duration": "40 min",
        "content": "<h2>Mentor Introduction</h2><p>Say: “It’s launch time! Let’s announce your first project to the world.”</p><h3>Objective</h3><ul><li>Write a professional yet personal LinkedIn post</li><li>Share your live link and learnings</li><li>Build visibility as an AI Engineer</li></ul><h3>Mentor Demo (10 min)</h3><p>Open LinkedIn → New Post → Copy this starter template:</p><div class='code-block'><code>🚀 Week 1 of my AI Engineer Bootcamp — DONE!<br><br>✅ Deployed my first app using Vercel<br>✅ Learned to use .env securely<br>✅ Debugged live builds with AI<br>✅ Documented everything like a pro<br><br>What I built → Quote Generator<br>🖥️ Live: https://quote-ai.vercel.app<br>🧠 Stack: Next.js, Tailwind, TypeScript<br>🤖 AI Tools: ChatGPT, Cursor, Claude, V0<br><br>Biggest learning: AI doesn’t replace engineers — it multiplies us.<br><br>#AIEngineering #WebDevelopment #LearnInPublic #NextJS #BuildInPublic</code></div><h3>Student Exercise (25 min)</h3><ol><li>Draft your post using the template.</li><li>Ask ChatGPT: “Make my LinkedIn post sound more authentic and concise.”</li><li>Add your screenshot and live link.</li><li>Post during class or after session.</li></ol><h3>Mentor Tip</h3><p>Celebrate together — ask volunteers to share their posts in the group chat or on screen!</p><h3>Deliverable</h3><p>✅ LinkedIn post published<br>✅ Screenshot of post shared in group<br>✅ Visibility started for your AI Engineer profile</p>"
      },
      {
        "title": "Page 9: Reflection & Graduation from Week 1 🎓",
        "type": "practical",
        "duration": "40 min",
        "content": "<h2>Mentor Closing</h2><p>Say with pride: “Take a deep breath — you just completed your first week as an AI Engineer!”</p><h3>Objective</h3><ul><li>Reflect on learnings, time saved, and mindset growth</li><li>Summarize key takeaways from the week</li><li>Prepare for Week 2 — Building MVPs</li></ul><h3>Mentor Reflection Discussion</h3><p>Ask these three open questions to the class:</p><ol><li>What was your biggest ‘aha!’ moment this week?</li><li>How did AI change the way you code?</li><li>What would you teach your past self before starting this bootcamp?</li></ol><h3>Student Exercise (20 min)</h3><ol><li>Create a new file: <code>WEEK1-REFLECTION.md</code>.</li><li>Fill this template:</li></ol><div class='code-block'><code># Week 1 Reflection<br><br>## Key Wins 🎯<br>- Deployed first app<br>- Learned AI-assisted debugging<br>- Published LinkedIn post<br><br>## What I Struggled With ⚡<br>- Setting up SSH key<br>- Fixing Tailwind config<br>- Build errors<br><br>## My Favorite Tool 💡<br>Cursor — instant debugging and code edits<br><br>## Next Goal 🚀<br>Build a real product MVP with AI guidance<br><br>## Stats 📊<br>- Hours Spent: 15<br>- Projects Deployed: 1<br>- Bugs Solved: 8<br>- Time Saved (vs manual): 70%</code></div><h3>Mentor Wrap-up Speech</h3><p>Say: “You’ve proven you can build, deploy, debug, and share. That’s what separates learners from builders. You are now officially an AI Engineer in training.”</p><p>🎉 Play uplifting music, take screenshots, and cheer for everyone.</p><h3>Next Step</h3><ul><li>✅ Complete reflection commit:<br><code>git add WEEK1-REFLECTION.md</code><br><code>git commit -m 'docs: add week 1 reflection'</code><br><code>git push origin main</code></li><li>✅ Prepare for Week 2 — <strong>AI MVP Planning & Execution</strong></li></ul><h3>Deliverable</h3><p>✅ WEEK1-REFLECTION.md pushed<br>✅ Screenshot + LinkedIn post shared<br>✅ Emotional closure of Week 1 🎓</p>"
      }
    ]
  }
  