{
    "title": "Day 3 — Planning & Requirement Analysis with AI (Mentor Lesson Script)",
    "pages": [
      {
        "title": "Page 1: The Power of Planning — From Chaos to Clarity",
        "type": "theory",
        "duration": "20 min",
        "content": "<h2>Mentor Introduction</h2><p>Say this with a smile: “Good morning builders! Yesterday we learned how to <em>build fast</em> with AI. Today, we’ll learn how to <strong>think clearly</strong> before we build.”</p><h3>Goal</h3><ul><li>Understand why every successful AI project starts with a plan.</li><li>Learn what goes wrong when we skip requirement analysis.</li></ul><h3>Mentor Story</h3><p>Tell a short story: “Last year, I built an app in one night using ChatGPT. It looked amazing… until I realized I didn’t know who it was for, what problem it solved, or what success meant. That’s when I learned — speed without direction is noise.”</p><h3>Teaching Points</h3><ul><li><strong>AI amplifies direction</strong> — if your direction is fuzzy, AI multiplies confusion.</li><li><strong>SDLC = Planning → Building → Testing → Deploying → Feedback</strong>.</li><li>AI can help in each phase, but planning defines quality.</li></ul><h3>Mentor Discussion Prompt</h3><p>Ask: “How do you normally start a project? By idea, by feature, or by goal?” Let 3–4 students share. Use that to highlight the gap between <em>idea</em> and <em>requirements</em>.</p><h3>Activity (5 min)</h3><p>Write on board: <strong>“A bad plan is expensive. A good plan saves weeks.”</strong><br>Ask learners to open Notion or a doc and title it <code>Day3-Planning</code> — they’ll use it all session.</p><h3>Mentor Tip</h3><p>Keep this session conversational. Planning isn’t paperwork — it’s storytelling for engineers.</p>"
      },
      {
        "title": "Page 2: What is a PRD (Product Requirement Document)?",
        "type": "theory",
        "duration": "20 min",
        "content": "<h2>Mentor Introduction</h2><p>Say: “Now let’s talk about the most powerful one-page document you’ll ever write — the PRD.”</p><h3>Learning Objectives</h3><ul><li>Understand what a PRD is and why it’s the blueprint for every AI product.</li><li>Learn the 6 key sections of a good PRD.</li><li>See how AI tools like ChatGPT and Claude can co-write it with you.</li></ul><h3>Explain the Concept</h3><p><strong>Definition:</strong> A PRD (Product Requirement Document) describes what you’re building, why, for whom, and how success is measured.</p><h3>PRD Template</h3><table><tr><th>Section</th><th>Purpose</th></tr><tr><td>1. Product Overview</td><td>Short summary of what the product does</td></tr><tr><td>2. Problem Statement</td><td>What user pain point you are solving</td></tr><tr><td>3. Target Users</td><td>Who will use this and why</td></tr><tr><td>4. Features & Scope</td><td>Main features, prioritized list</td></tr><tr><td>5. Success Metrics</td><td>How you know it works (KPIs)</td></tr><tr><td>6. Technical Requirements</td><td>Tech stack, dependencies, limits</td></tr></table><h3>Mentor Demonstration (10 min)</h3><p>Open ChatGPT and type:</p><div class='code-block'><code>Act as a Product Manager. Write a PRD for an 'AI Homework Assistant' app for students. Include overview, target audience, 3 core features, and success metrics.</code></div><p>Read aloud what AI generates. Discuss what feels clear vs vague. Highlight missing details like ‘user flow’ or ‘non-functional requirements.’</p><h3>Mentor Notes</h3><ul><li>Pause to explain how AI can’t guess business intent — that’s the human layer.</li><li>Encourage learners to treat AI as a co-writer, not an author.</li></ul><h3>Activity</h3><p>Students create a new file <code>PRD.md</code> in their GitHub repo. They’ll fill it throughout the day.</p>"
      },
      {
        "title": "Page 3: Defining MVP and User Stories",
        "type": "theory",
        "duration": "20 min",
        "content": "<h2>Mentor Introduction</h2><p>Say: “A Minimum Viable Product is not a small app — it’s a smart start.”</p><h3>Learning Objectives</h3><ul><li>Understand MVP mindset</li><li>Learn to define ‘must-have’ vs ‘nice-to-have’</li><li>Write clear user stories AI can expand</li></ul><h3>Teaching Points</h3><ul><li><strong>MVP = smallest version that delivers core value</strong></li><li><strong>User story = plain language requirement</strong></li></ul><h3>Mentor Demo</h3><p>Ask ChatGPT:</p><div class='code-block'><code>Help me write user stories for a note-taking app.<br>Follow the format: As a [type of user], I want to [goal] so that [benefit].</code></div><p>Show sample output:</p><ul><li>As a student, I want to add notes by voice so that I can capture ideas quickly.</li><li>As a teacher, I want to share notes with students so that they can access material anytime.</li></ul><h3>Discussion</h3><p>Ask: “What’s the difference between a feature and a story?” → Guide them toward ‘a story explains the <em>why</em>, not just the what.’</p><h3>Mini Exercise (10 min)</h3><p>Students choose their Day 2 project (Quote Generator, etc.) and write 3 user stories using the template above. AI helps them expand or rephrase for clarity.</p><h3>Mentor Tip</h3><p>Encourage empathy: ‘Imagine you’re the end-user writing this, not the engineer.’</p><h3>Deliverable</h3><p>✅ 3 user stories written and committed in <code>PRD.md</code></p>"
      },
      {
        "title": "Page 4: Writing a PRD with AI (Hands-On)",
        "type": "practical",
        "duration": "40 min",
        "content": "<h2>Mentor Setup</h2><p>Say: “Time to turn ideas into a real document — your AI is now your product manager!”</p><h3>Objective</h3><ul><li>Use ChatGPT or Claude to generate a full PRD draft</li><li>Learn to refine AI’s writing to match human intent</li></ul><h3>Mentor Demo (10 min)</h3><p>Open ChatGPT and type:</p><div class='code-block'><code>Act as a Product Manager. Write a concise PRD for an 'AI Study Assistant' that summarizes key concepts from uploaded PDFs. Include:<br>- Overview<br>- Problem Statement<br>- Target Users<br>- Core Features (3)<br>- Success Metrics<br>- Technical Stack suggestions.</code></div><p>Review live. Ask: “What do you like about this draft? What feels vague?” Write observations on whiteboard.</p><h3>Student Task (25 min)</h3><ol><li>Pick any app idea (Quote Generator, Notes App, Chatbot).</li><li>Prompt ChatGPT or Claude using similar structure.</li><li>Read the AI response aloud in small groups.</li><li>Use AI again to refine: <code>Make this PRD more specific to my target audience: college students.</code></li><li>Paste final PRD into <code>PRD.md</code> file in repo.</li></ol><h3>Mentor Tip</h3><p>Remind students: the first AI answer is <em>draft one</em> — iteration turns it into strategy.</p><h3>Deliverable</h3><p>✅ PRD.md with all 6 sections completed<br>✅ Commit: <code>docs: add AI-generated PRD</code></p>"
      },
      {
        "title": "Page 5: Breaking the PRD into Features & Tasks",
        "type": "practical",
        "duration": "40 min",
        "content": "<h2>Mentor Introduction</h2><p>Say: “We’ve got a PRD. Now we’ll break it down so your AI can help you <em>build</em> it next week.”</p><h3>Goal</h3><ul><li>Convert PRD sections into actionable features</li><li>Learn to create feature specs AI can understand</li></ul><h3>Mentor Demo (10 min)</h3><p>Show ChatGPT prompt:</p><div class='code-block'><code>From this PRD, extract 5 key features and describe their goals in one sentence each.<br>Then break each feature into 2–3 small engineering tasks (max 3 hours each).</code></div><p>Explain: this method translates business requirements → development backlog.</p><h3>Example Output</h3><table><tr><th>Feature</th><th>Task Breakdown</th></tr><tr><td>1. Quote Display Module</td><td>- Fetch random quotes<br>- Add animation<br>- Display on homepage</td></tr><tr><td>2. Favorite Quotes</td><td>- Add save button<br>- Store in localStorage</td></tr></table><h3>Student Activity (25 min)</h3><ol><li>Use ChatGPT to extract features + tasks from their own PRD.</li><li>Refine prompt: <code>Ensure each task is under 2 hours and includes a testing step.</code></li><li>Paste output under ‘Features’ in <code>PRD.md</code>.</li></ol><h3>Mentor Tip</h3><p>Encourage variety — two students with same idea will have different structures if they think independently. Celebrate that!</p><h3>Deliverable</h3><p>✅ PRD updated with Features & Tasks<br>✅ Commit: <code>docs: add feature-task mapping</code></p>"
      },
      {
        "title": "Page 6: Creating an AI-Assisted Sprint Plan",
        "type": "practical",
        "duration": "40 min",
        "content": "<h2>Mentor Setup</h2><p>Say: “Now we’ll make our first sprint plan — your AI is your planning assistant.”</p><h3>Objective</h3><ul><li>Learn what a sprint plan is</li><li>Use AI to prioritize and estimate tasks</li><li>Create a weekly goal with realistic timelines</li></ul><h3>Mentor Demo (10 min)</h3><p>Prompt ChatGPT:</p><div class='code-block'><code>Based on this feature list, create a 1-week sprint plan.<br>Include:<br>- Sprint Goal<br>- Tasks (with time estimate)<br>- Priority (High/Medium/Low)<br>- Expected Outcome summary.</code></div><p>Show how AI organizes tasks. Emphasize: Sprints are not to do everything — just key deliverables.</p><h3>Student Exercise (25 min)</h3><ol><li>Ask students to create a sprint plan for next 5 working days using their PRD.</li><li>Refine AI output: <code>Make sure total time ≤ 12 hours and balance between front-end and back-end tasks.</code></li><li>Paste the final plan below ‘Sprint 1’ in their <code>PRD.md</code>.</li><li>Create GitHub Issues for each task manually (mentor demo below).</li></ol><h3>GitHub Demo (5 min)</h3><p>Show how to go to <strong>Issues → New</strong> → paste task title → assign label: <code>feature</code> or <code>bug</code>.</p><h3>Mentor Tip</h3><p>Encourage small scope — “tiny wins lead to consistent progress.”</p><h3>Deliverable</h3><p>✅ Sprint Plan (5–7 tasks) in PRD<br>✅ GitHub Issues created<br>✅ Commit: <code>docs: add sprint1 plan</code></p>"
      },
      {
        "title": "Page 7: Peer Review & Refinement",
        "type": "practical",
        "duration": "40 min",
        "content": "<h2>Mentor Setup</h2><p>Say: “No document is perfect until it’s reviewed. Engineers learn by looking at other people’s plans.”</p><h3>Objective</h3><ul><li>Learn how to review PRDs constructively</li><li>Use AI to summarize and critique PRDs</li></ul><h3>Mentor Demo (10 min)</h3><p>Show ChatGPT prompt:</p><div class='code-block'><code>Review this PRD for an 'AI Study App'. Identify unclear goals, missing success metrics, and vague technical details.<br>Give feedback in bullet points.</code></div><p>Explain that AI reviews should highlight clarity, completeness, and coherence — not rewrite the document.</p><h3>Student Pair Activity (25 min)</h3><ol><li>Pair students in breakout teams (A & B).</li><li>Each uploads their <code>PRD.md</code> into ChatGPT or Claude with the review prompt.</li><li>Read AI feedback aloud to each other.</li><li>Discuss what to keep, fix, or remove.</li><li>Revise PRD and update the file.</li></ol><h3>Mentor Walkthrough</h3><ul><li>Encourage use of different AIs — ChatGPT gives clarity reviews, Claude spots missing details.</li><li>Ask pairs: “What’s one improvement you made from peer feedback?”</li></ul><h3>Mentor Tip</h3><p>Reinforce growth mindset — feedback is fuel, not failure.</p><h3>Deliverable</h3><p>✅ PRD reviewed & updated<br>✅ Commit: <code>docs: refine PRD after peer review</code></p>"
      },
      {
        "title": "Page 8: Version Control & Change Logs",
        "type": "practical",
        "duration": "40 min",
        "content": "<h2>Mentor Introduction</h2><p>Say: “In real companies, a PRD isn’t static — it evolves with the project. That’s why we use versioning and changelogs.”</p><h3>Learning Objectives</h3><ul><li>Track updates to documentation like code</li><li>Use Git to manage documentation history</li><li>Use AI to summarize key changes</li></ul><h3>Mentor Demo (10 min)</h3><p>In terminal, show:</p><div class='code-block'><code>git log --oneline<br>git diff HEAD~1 HEAD</code></div><p>Explain: This shows what changed between two commits.</p><p>Then ask ChatGPT: <code>Summarize these git diff changes in plain English as a changelog entry.</code></p><p>Show AI’s response and paste it into <code>CHANGELOG.md</code>.</p><h3>Student Activity (25 min)</h3><ol><li>Run <code>git log</code> and identify last two commits.</li><li>Ask AI to summarize differences in bullet form.</li><li>Create <code>CHANGELOG.md</code> file with date and short notes:</li></ol><div class='code-block'><code>## [2025-10-07] PRD Updates<br>- Added success metrics<br>- Clarified feature 3<br>- Updated sprint timeline</code></div><li>Commit with message:<br><code>chore: add changelog for PRD update</code></li></ul><h3>Mentor Tip</h3><p>Encourage clean logs. Later, these help track version evolution across all modules.</p><h3>Deliverable</h3><p>✅ CHANGELOG.md created<br>✅ Commit recorded and pushed<br>✅ Students can summarize changes with AI</p>"
      },
      {
        "title": "Page 9: Reflection & PRD Showcase",
        "type": "practical",
        "duration": "40 min",
        "content": "<h2>Mentor Introduction</h2><p>Say: “Every professional engineer reflects. The goal is not just to write a PRD, but to understand what you learned while doing it.”</p><h3>Objective</h3><ul><li>Summarize key takeaways</li><li>Document learning publicly</li><li>Present PRDs for peer inspiration</li></ul><h3>Mentor Opening (5 min)</h3><p>Ask: “How many of you had AI completely nail your PRD on first try?” (smiles) — None. Great. That’s the point — iteration matters more than automation.</p><h3>Student Task (25 min)</h3><ol><li>Create a section in their repo: <code>LEARNINGS_DAY3.md</code>.</li><li>Prompt AI: <code>Summarize my PRD learnings into 3 paragraphs: what I planned, what changed after feedback, and what I learned about using AI for documentation.</code></li><li>Edit it to reflect personal experience.</li><li>Commit and push file.</li><li>Prepare a 1-minute verbal summary for class sharing.</li></ol><h3>Mentor Showcase (10 min)</h3><ul><li>Randomly pick 3 students to share their PRD learnings.</li><li>Celebrate insights like “AI helped me structure ideas” or “Claude made me spot vague goals.”</li></ul><h3>Closing Quote</h3><p>End class with this line:<br><em>“An AI Engineer doesn’t just build fast — they build with foresight.”</em></p><h3>Reflection Prompts</h3><ul><li>How did AI change your planning process?</li><li>What was your biggest ‘aha’ moment today?</li><li>Which AI tool gave the most useful feedback?</li></ul><h3>Deliverables</h3><p>✅ PRD.md finalized<br>✅ CHANGELOG.md added<br>✅ LEARNINGS_DAY3.md committed<br>✅ 1-minute presentation done</p><h3>Next Steps</h3><p>Preview Day 4: “Design & Implementation” — where we’ll turn these PRDs into real UI modules using V0, Cursor, and GitHub Actions!</p>"
      }
    ]
  }
  